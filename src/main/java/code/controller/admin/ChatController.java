package code.controller.admin;

import code.model.request.ChatRequest;
import code.service.admin.ChatService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController("AdminChatController")
@RequestMapping("/api/admin/chat")
public class ChatController {

  private ChatService chatService;

  public ChatController(ChatService chatService) {
    this.chatService = chatService;
  }

//  L·∫•y t·∫•t c·∫£ h√¥i tho·∫°i : d√†nh cho ph·∫ßn tin nh·∫Øn b√™n ngo√†i
/*
* ----------------------------
| ∆Øu ti√™n   | Kh√°c        |
-----------------------------------------
| Cloud c·ªßa t√¥i            |            |
| B·∫°n: ch·ªâ ri√™ng m√¨nh ta   | 20/11      |
----------------------------            |
| Btl HCSDL ƒêPT            |            |
| B·∫°n: @All l√†m r.          | 13 ph√∫t   |
----------------------------            |
| D20CNTT                  |            |
| Thanh V≈©: Ai m·ªü link x√©t | 10 gi·ªù     |
----------------------------            |
| Zalopay - ƒê·∫∑t v√© phim    |            |
| üéâ CGV CULTURE DAY...    | 2 ng√†y     |
----------------------------            |
| CodeGym - Chu·ªói s·ª± ki·ªán  |            |
| H·ªìng √Çn: Ch√†o bu·ªïi s√°ng  | 3 ng√†y     |
----------------------------            |
| H∆∞ng                     |            |
| B·∫°n: ok                  | 3 ng√†y     |
----------------------------            |
| Zalopay                  |            |
| Nguy·ªÖn Th√°i H√≤a ∆°i...    | 19/11      |
----------------------------            |
| vinh ho√†n h·∫£o huy        |            |
| Con T√¥m Tr√™n ƒê·ªìng: Cho.. | 22/11      |
---------------------------------------
  * */
  @GetMapping("/")
  public ResponseEntity<?> getConversations(
      @RequestParam(defaultValue = "0") int page,
      @RequestParam(defaultValue = "10") int size) {
    return ResponseEntity.ok(chatService.getConversations(page, size));
  }

// L·∫•y ph√¢n trang 20 tin ƒë·∫ßu c·ªßa t·∫•t c·∫£ th√¥ng tin Message cu·ªôc tr√≤ chuy·ªán v·ªõi customer c√≥ id
//  l√† customerId

  @GetMapping("/{conversationId}")
  public ResponseEntity<?> getMessagesByConversationId(
      @PathVariable long conversationId,
      @RequestParam(defaultValue = "0") int page) {
    return ResponseEntity.ok(chatService.getMessagesByConversation(conversationId,page));
  }

//  G·ª≠i tin nh·∫Øn t·ªõi customer c√≥ id l√† customerId
  @PostMapping("/")
  public ResponseEntity<?> chatToCustomer(
      @RequestParam long customerId,
      @RequestBody  ChatRequest request
  ){
    return ResponseEntity.ok(chatService.chatToCustomer(customerId,request));
  }
}
